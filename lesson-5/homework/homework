What is a Primary Key in a Table?
‚Ä¢	A primary key is a unique identifier for each row in a table.
‚Ä¢	Example: CustomerID in the Customers table ‚Äî every customer has a unique ID.
________________________________________
üîó Two Types of Table Relationships in Power BI
1.	One-to-Many (1:*) ‚Äì Most common
‚û§ e.g., One customer can have many orders.
2.	Many-to-Many (:) ‚Äì Used when both sides have duplicate values (handled with bridge tables or composite models).
________________________________________
üîß How to Create a Relationship Between Two Tables in Power BI
1.	Go to Model view.
2.	Drag a field (e.g., CustomerID) from one table to the matching field in another.
3.	Or use Manage Relationships ‚Üí New.
4.	Choose the cardinality (1:*, :, etc.) and direction.
________________________________________
üåü What is a Star Schema?
‚Ä¢	A star schema consists of:
o	A central Fact table (e.g., Sales).
o	Surrounded by Dimension tables (e.g., Customers, Products, Dates).
‚Ä¢	It looks like a star, and all dimensions directly relate to the fact table.
________________________________________
üì¶ Which Table Is Typically the Fact Table in Sales Data?
‚Ä¢	Sales.csv is the fact table.
o	Contains transactional data: OrderID, ProductID, CustomerID, Quantity, Price.
________________________________________
üîÅ Link Sales.csv to Customers.csv Using CustomerID (One-to-Many)
‚Ä¢	Customers[CustomerID] ‚ûù Primary key
‚Ä¢	Sales[CustomerID] ‚ûù Foreign key
‚Ä¢	Create a one-to-many relationship:
o	Customers (1) ‚Üí Sales (*)
________________________________________
‚ùì Why Is ProductID in Sales.csv a Foreign Key?
‚Ä¢	It references the ProductID in the Products table.
‚Ä¢	Enables the model to join product details (e.g., price, name) to each sale.
________________________________________
üõ†Ô∏è Fix a Relationship Error Where ProductID Has Mismatched Data Types
1.	In Power Query, convert both columns to the same data type (e.g., text or whole number).
2.	Use Transform ‚Üí Data Type.
________________________________________
üöÄ Why Does a Star Schema Improve Performance?
‚Ä¢	Keeps the model simple and efficient:
o	Reduces table size (fewer joins).
o	Improves DAX calculations and query folding.
o	Easier for the VertiPaq engine to compress data and optimize storage.
________________________________________
‚ûï Add a New Column TotalSales in Sales (Quantity * Price from Products)
Steps:
1.	Ensure Sales is related to Products on ProductID.
2.	Create a new column:
dax
TotalSales = Sales[Quantity] * RELATED(Products[Price])
________________________________________
üîÅ Optimize a Model with Circular Relationships
‚Ä¢	Avoid circular paths ‚Äì Power BI will block them.
Solutions:
‚Ä¢	Remove or redesign one of the conflicting relationships.
‚Ä¢	Use DAX measures (e.g., CALCULATE with TREATAS) instead of direct relationships.
‚Ä¢	Consider using a bridge table to break the loop.
________________________________________
üìÖ Create a Role-Playing Dimension for OrderDate and ShipDate
1.	Load a Date table (e.g., DimDate).
2.	Create two relationships from Sales[OrderDate] and Sales[ShipDate] to DimDate[Date], but only one active.
3.	Use USERELATIONSHIP() in DAX:
dax
ShipDateSales = CALCULATE([TotalSales], USERELATIONSHIP(Sales[ShipDate], DimDate[Date]))
________________________________________
üîÑ Handle a Many-to-Many Relationship Between Customers and Products
‚Ä¢	Problem: No direct one-to-many path exists.
Solutions:
‚Ä¢	Create a bridge table (e.g., CustomerProductBridge).
‚Ä¢	Use it to connect both Customers and Products.
‚Ä¢	Use DAX measures to calculate aggregations via the bridge.
________________________________________
üîÅ Use Bidirectional Filtering Sparingly ‚Äî When Is It Appropriate?
‚Ä¢	Useful in lookup-to-lookup filtering via a fact table.
Examples:
‚Ä¢	Reporting scenarios where you want filter propagation both ways (e.g., filtering Customers filters Products and vice versa).
Use carefully:
‚Ä¢	Can cause performance issues or ambiguity.
‚Ä¢	Instead, use single-direction filtering + DAX measures for more control.
________________________________________
üõ°Ô∏è Write DAX to Enforce Referential Integrity if a CustomerID Is Deleted
Check missing customers in Sales:
dax
MissingCustomers = 
CALCULATE(
    COUNTROWS(Sales),
    ISBLANK(RELATED(Customers[CustomerID]))
)
Prevent issues:
You could filter or flag such rows using:
dax
ValidSales = 
IF(ISBLANK(RELATED(Customers[CustomerID])), BLANK(), Sales[Quantity])

